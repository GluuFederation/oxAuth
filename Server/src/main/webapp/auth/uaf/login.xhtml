<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.org/schema/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                template="/WEB-INF/incl/layout/template.xhtml">
    <ui:define name="head">

        <link rel="stylesheet" href="#{oxAuthConfigurationService.cssLocation}/jquery-ui-1.12.1.min.css"/>
        <script src="#{oxAuthConfigurationService.jsLocation}/jquery-1.12.4.min.js"/>
        <script src="#{oxAuthConfigurationService.jsLocation}/jquery.qrcode-0.12.0.min.js"/>
        <script src="#{oxAuthConfigurationService.jsLocation}/jquery-ui-1.12.1.min.js"/>
        <script src="./js/uaf-api.js"/>

        <script>
			var helper = (function() {
				var authResult = undefined;

				return {
	 			    /**
	 			    * Resume on getting authentication result from server
	 			    */
					onSignInCallback: function(authResult, authHandle) {
				        console.log('Get authentication result: ' + authResult);
						helper.resumeAuthentication(authResult, authHandle);
					},

					/**
					* Send form to server to resume authentication workflow
					*/
					resumeAuthentication: function(authResult, authHandle) {
						$('input#auth_result').val(authResult);
						$('input#auth_handle').val(authHandle);
						$('form#response').submit();
					},
				};
			})();
			
			/**
			 * Calls the helper method that handles the authentication flow.
			 */
			function onSignInCallback(authResult, authHandle) {
			  helper.onSignInCallback(authResult, authHandle);
			}

			var qr_image = '${qr_image}';
			var qr_options = ${qr_options};
			var server_uri = '${uaf_obb_server_uri}';
			var status_request = ${uaf_obb_status_request};

			$(document).ready(function() {
				if (qr_image == '') {
					onSignInCallback('error');
				}

				uaf_api.renderQrCode('#container', qr_image, qr_options);
				uaf_api.startProgressBar('#progressbar', 60);
				uaf_api.startStatusChecker(onSignInCallback, server_uri, status_request, 60);
			});

        </script>

        <style type="text/css">
            .login-panel {
                border-style: solid;
                border-width: 1px;
                padding: 1px;
                background-color: #FFFFFF;
                border-color: #C4C0B9;
            }

            .login-panel-header {
                background-color: #D4CFC7;
                background-image: url("#{oxAuthConfigurationService.getImgLocation()}/panel_header_bg.png");
                background-position: left top;
                background-repeat: repeat-x;
                border-style: solid;
                border-width: 1px;
                padding: 2px;
                border-color: #D4CFC7;
                color: #000000;
                font-family: Arial, Verdana, sans-serif;
                font-size: 11px;
                font-weight: bold;
            }

            .login-panel-body {
                padding: 10px;
                color: #000000;
                font-family: Arial, Verdana, sans-serif;
                font-size: 11px;
            }
        </style>
    </ui:define>

    <ui:define name="pageTitle">#{oxauth['uaf.pageTitle']}</ui:define>

    <ui:define name="body">
        <form id="response" method="post" action="#{request.contextPath}/postlogin">
            <input type="hidden" id="auth_result" name="auth_result" />
            <input type="hidden" id="auth_handle" name="auth_handle" />
        </form>

        <table border="0" align="center">
            <tr>
                <td>
                    <div>
                        <h:form id="loginForm">
                            <s:token allowMultiplePosts="true"/>
                            <h:panelGroup rendered="#{not identity.loggedIn}">
                                <div class="login-panel">
                                    <div class="login-panel-header">
                                        <h:outputText value="#{oxauth['login.login']}"/>
                                    </div>
                                    <div class="login-panel-body">
                                        <ui:param name="client" value="#{clientService.getClient(sessionAttributes['client_id'])}" />

                                        <s:div rendered='#{!empty client.getLogoUri()}'>
                                            <h:graphicImage url='#{client.getLogoUri()}'/>
                                        </s:div>

                                        <div class="dialog">
                                        	<p>#{oxauth['uaf.scanQRCode']}</p>
                                        	<div id="container"></div>
                                        	<div id="progressbar"></div>
                                        </div>

                                        <s:div rendered='#{!empty client.getPolicyUri()}'>
                                            <p>
                                                <h:outputText value="#{oxauth['common.agreePolicy']}"/>
                                                <a target="_blank" href='#{client.getPolicyUri()}'>
                                                    <h:outputText value="#{oxauth['common.privacyPolicy']}"/>
                                                </a>
                                            </p>
                                        </s:div>

                                        <s:div rendered='#{!empty client.getTosUri()}'>
                                            <p>
                                                <h:outputText value="#{oxauth['common.pleaseReadTheTos']}"/>
                                                <a target="_blank" href='#{client.getTosUri()}'>
                                                    <h:outputText value="#{oxauth['common.termsOfService']}"/>
                                                </a>
                                            </p>
                                        </s:div>
                                    </div>
                                </div>
                            </h:panelGroup>
                        </h:form>
                    </div>
                </td>
            </tr>
        </table>
    </ui:define>

</ui:composition>
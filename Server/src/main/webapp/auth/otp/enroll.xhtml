<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
		"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	template="/WEB-INF/incl/layout/login-template.xhtml">
	<f:metadata>
		<f:viewAction action="#{authenticator.prepareAuthenticationForStep}"
			if="#{not identity.loggedIn}" />
	</f:metadata>
	<ui:define name="head">
		<meta name="description" content="Gluu Inc." />
		<link rel="stylesheet"
			href="#{oxAuthConfigurationService.cssLocation}/jquery-ui-1.12.1.min.css" />
		<script
			src="#{oxAuthConfigurationService.jsLocation}/jquery-1.12.4.min.js" />
		<script
			src="#{oxAuthConfigurationService.jsLocation}/jquery.qrcode-0.12.0.min.js" />
		<script
			src="#{oxAuthConfigurationService.jsLocation}/jquery-ui-1.12.1.min.js" />
		<script src="../../js/gluu-auth.js" />

		<script>
			var helper = (function() {
				var authResult = undefined;

				return {
					/**
					 * Resume on getting authentication result from server
					 */
					onSignInCallback: function(authResult) {
						console.log('Get authentication result: ' + authResult);
						helper.resumeAuthentication(authResult);
					},

					/**
					 * Send form to server to resume authentication workflow
					 */
					resumeAuthentication: function(authResult) {
						$('input#auth_result').val(authResult);
						$('form#response').submit();
					},
				};
			})();

			/**
			 * Calls the helper method that handles the authentication flow.
			 */
			function onSignInCallback(authResult) {
				helper.onSignInCallback(authResult);
			}

			var request = '${identity.getWorkingParameter('otp_enrollment_request')}';
			var label = '${identity.getWorkingParameter('qr_label')}';
			var qr_options = ${identity.getWorkingParameter('qr_options')};
			$(document).ready(function() {

				if (request == '') {
					onSignInCallback('error');
				}

				gluu_auth.renderQrCode('#container', request, qr_options, label);
				gluu_auth.startProgressBar('#progressbar', 60, onSignInCallback);
			});

		</script>
		<style type="text/css">
.otp-progress-bar {
	margin-right: 80px;
}

#progressbar {
	background-color: #1AB26B;
	border-radius: 10px;
	margin: auto;
	margin-left: 5%;
	width: 90%;
}
</style>
	</ui:define>

	<ui:define name="pageTitle">
		<h:outputText value="#{msgs['otp.pageTitle']}" />
	</ui:define>

	<ui:define name="body">
		<form method="post" id="response"
			action="#{request.contextPath}/postlogin.htm">
			<input type="hidden" id="auth_result" name="auth_result" />
		</form>
		<header>
		<div class="container">
			<div class="logo span2">
				<ui:param name="client"
					value="#{clientService.getClient(identity.sessionId.sessionAttributes['client_id'])}" />

				<h:panelGroup rendered='#{!empty client.getLogoUri()}'>
					<h:graphicImage url='#{client.getLogoUri()}' />
				</h:panelGroup>
				<h:panelGroup rendered='#{empty client.getLogoUri()}'>
					<object data="../../ext/resources/img/logo.png" type="image/png">
						<img src="../../img/logo.png" />
					</object>
				</h:panelGroup>
			</div>
		</div>
		<div class="bs-docs-section"
			style="border-top: 2px solid #1ab26b !important;"></div>

		</header>
		<!-- end header-->
		<div class="container text-center otp-container">
			<div id="content" class="sign-in-page">
				<div class="row-fluid">
					<h:form id="loginForm" class="signin-form span6 offset3">
						<h:panelGroup rendered="#{not identity.loggedIn}">
							<div class="inner-form-container row-fluid">
								<div class="row">
									<div class="dialog">
										<p>#{msgs['otp.scanQRCode']}</p>
										<div id="container"></div>
										<br></br>
										<div id="progressbar" class="otp-progress-bar"></div>
										<br></br>
									</div>
								</div>
								<div class="row">
									<div id="submit_block" class="login_input">
										<h:commandButton id="finishButton"
										    style="margin-left:35%;"
											styleClass="btn btn-primary col-sm-4"
											value="#{msgs['otp.finish']}"
											action="#{authenticator.authenticate}" />
									</div>
									<span class="sprite-green_click_icon"></span>
								</div>
								<h:panelGroup rendered='#{!empty client.getPolicyUri()}'>
									<p>
										<h:outputText value="#{msgs['common.agreePolicy']}" />
										<a target="_blank" href='#{client.getPolicyUri()}'> <h:outputText
												value="#{msgs['common.privacyPolicy']}" />
										</a>
									</p>
								</h:panelGroup>

								<h:panelGroup rendered='#{!empty client.getTosUri()}'>
									<p>
										<h:outputText value="#{msgs['common.pleaseReadTheTos']}" />
										<a target="_blank" href='#{client.getTosUri()}'> <h:outputText
												value="#{msgs['common.termsOfService']}" />
										</a>
									</p>
								</h:panelGroup>

							</div>
						</h:panelGroup>
					</h:form>
				</div>
			</div>
			<div class="footer-copyright text-center py-3"
				style="background: #1ab26b; position: fixed; left: 0; bottom: 0; width: 100%; text-align: center;">
				<div class="footer">
					<div class="row">
						<div class="col-md-12">
							<div class="padding_spc"
								style="padding-bottom: 5px; padding-top: 5px;">
								<p>
									<h:outputText value="#{msgs['common.gluuInc']}" />
									| <a target="_blank"
										href="https://github.com/GluuFederation/oxAuth/blob/master/LICENSE"><h:outputText
											value="#{msgs['common.caution']}" escape="false" /></a>
									<h:panelGroup rendered='#{!empty client.policyUri}'>
					| <a target="_blank" href="#{client.policyUri}"><h:outputText
												value="#{msgs['common.privacyPolicy']}" escape="false" /></a>
									</h:panelGroup>
									<h:panelGroup rendered='#{!empty client.tosUri}'>
					| <a target="_blank" href="#{client.tosUri}"><h:outputText
												value="#{msgs['common.termsOfService']}" escape="false" /></a>
									</h:panelGroup>
								</p>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

	</ui:define>
</ui:composition>

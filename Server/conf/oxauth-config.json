{
    "mode":"ldap",
    "issuer":"${config.oxauth.issuer}",
    "loginPage":"${config.oxauth.contextPath}/login",
    "authorizationPage":"${config.oxauth.contextPath}/authorize",
    "baseEndpoint":"${config.oxauth.contextPath}/seam/resource/restv1",
    "authorizationEndpoint":"${config.oxauth.contextPath}/seam/resource/restv1/oxauth/authorize",
    "tokenEndpoint":"${config.oxauth.contextPath}/seam/resource/restv1/oxauth/token",
    "userInfoEndpoint":"${config.oxauth.contextPath}/seam/resource/restv1/oxauth/userinfo",
    "clientInfoEndpoint":"${config.oxauth.contextPath}/seam/resource/restv1/oxauth/clientinfo",
    "checkSessionIFrame":"${config.oxauth.contextPath}/opiframe",
    "endSessionEndpoint":"${config.oxauth.contextPath}/seam/resource/restv1/oxauth/end_session",
    "jwksUri":"${config.oxauth.contextPath}/seam/resource/restv1/oxauth/jwks",
    "registrationEndpoint":"${config.oxauth.contextPath}/seam/resource/restv1/oxauth/register",
    "validateTokenEndpoint":"${config.oxauth.contextPath}/seam/resource/restv1/oxauth/validate",
    "openIdDiscoveryEndpoint":"${config.oxauth.issuer}/.well-known/webfinger",
    "openIdConfigurationEndpoint":"${config.oxauth.issuer}/.well-known/openid-configuration",
    "idGenerationEndpoint":"${config.oxauth.contextPath}/seam/resource/restv1/id",
    "introspectionEndpoint":"${config.oxauth.contextPath}/seam/resource/restv1/introspection",
    "umaConfigurationEndpoint":"${config.oxauth.contextPath}/seam/resource/restv1/oxauth/uma-configuration",
    "sectorIdentifierEndpoint":"${config.oxauth.contextPath}/sectoridentifier",
    "oxElevenGenerateKeyEndpoint":"${config.oxauth.contextPath}/oxeleven/rest/oxeleven/generateKey",
    "oxElevenSignEndpoint":"${config.oxauth.contextPath}/oxeleven/rest/oxeleven/sign",
    "oxElevenVerifySignatureEndpoint":"${config.oxauth.contextPath}/oxeleven/rest/oxeleven/verifySignature",
    "oxElevenDeleteKeyEndpoint":"${config.oxauth.contextPath}/oxeleven/rest/oxeleven/deleteKey",
    "openidSubAttribute":"inum",
    "responseTypesSupported":[
        "code",
        "code id_token",
        "token",
        "token id_token",
        "code token",
        "code token id_token",
        "id_token"
    ],
    "grantTypesSupported":[
        "authorization_code",
        "implicit",
        "urn:ietf:params:oauth:grant-type:jwt-bearer"
    ],
    "subjectTypesSupported":[
        "public",
        "pairwise"
    ],
    "defaultSubjectType": "pairwise",
    "userInfoSigningAlgValuesSupported":[
        "HS256",
        "HS384",
        "HS512",
        "RS256",
        "RS384",
        "RS512",
        "ES256",
        "ES384",
        "ES512"
    ],
    "userInfoEncryptionAlgValuesSupported":[
        "RSA1_5",
        "RSA-OAEP",
        "A128KW",
        "A256KW"
    ],
    "userInfoEncryptionEncValuesSupported":[
        "A128CBC+HS256",
        "A256CBC+HS512",
        "A128GCM",
        "A256GCM"
    ],
    "idTokenSigningAlgValuesSupported":[
        "HS256",
        "HS384",
        "HS512",
        "RS256",
        "RS384",
        "RS512",
        "ES256",
        "ES384",
        "ES512"
    ],
    "idTokenEncryptionAlgValuesSupported":[
        "RSA1_5",
        "RSA-OAEP",
        "A128KW",
        "A256KW"
    ],
    "idTokenEncryptionEncValuesSupported":[
        "A128CBC+HS256",
        "A256CBC+HS512",
        "A128GCM",
        "A256GCM"
    ],
    "requestObjectSigningAlgValuesSupported":[
        "none",
        "HS256",
        "HS384",
        "HS512",
        "RS256",
        "RS384",
        "RS512",
        "ES256",
        "ES384",
        "ES512"
    ],
    "requestObjectEncryptionAlgValuesSupported":[
        "RSA1_5",
        "RSA-OAEP",
        "A128KW",
        "A256KW"
    ],
    "requestObjectEncryptionEncValuesSupported":[
        "A128CBC+HS256",
        "A256CBC+HS512",
        "A128GCM",
        "A256GCM"
    ],
    "tokenEndpointAuthMethodsSupported":[
        "client_secret_basic",
        "client_secret_post",
        "client_secret_jwt",
        "private_key_jwt"
    ],
    "tokenEndpointAuthSigningAlgValuesSupported":[
        "HS256",
        "HS384",
        "HS512",
        "RS256",
        "RS384",
        "RS512",
        "ES256",
        "ES384",
        "ES512"
    ],
    "dynamicRegistrationCustomAttributes":[
        "oxAuthTrustedClient",
        "myCustomAttr1",
        "myCustomAttr2"
    ],
    "displayValuesSupported":[
        "page",
        "popup"
    ],
    "claimTypesSupported":[
        "normal"
    ],
    "serviceDocumentation":"http://ox.gluu.org/doku.php?id=oxauth:home",
    "claimsLocalesSupported":[
        "en"
    ],
    "uiLocalesSupported":[
        "en",
        "es"
    ],
    "claimsParameterSupported":true,
    "requestParameterSupported":true,
    "requestUriParameterSupported":true,
    "requireRequestUriRegistration":false,
    "opPolicyUri":"https://www.gluu.org/privacy-policy/",
    "opTosUri":"https://www.gluu.org/terms/",
    "authorizationCodeLifetime":${config.client.authorization-code-lifetime},
    "refreshTokenLifetime":14400,
    "idTokenLifetime":3600,
    "shortLivedAccessTokenLifetime":3600,
    "longLivedAccessTokenLifetime":31536000,
    "umaRequesterPermissionTokenLifetime":${config.uma.requester-permission-token-lifetime},
    "umaAddScopesAutomatically":false,
    "umaKeepClientDuringResourceSetRegistration":true,
    "cleanServiceInterval":${config.client.clean-service-interval},
    "keyRegenerationEnabled":false,
    "keyRegenerationInterval":48,
    "defaultSignatureAlgorithm":"RS256",
    "oxOpenIdConnectVersion":"openidconnect-1.0",
    "organizationInum":"${config.oxauth.organization}",
    "oxId":"https://${server.name}/oxid/service/gluu/inum",
    "dynamicRegistrationEnabled":true,
    "dynamicRegistrationExpirationTime":${config.client.dynamic-registration-expiration-time},
    "dynamicRegistrationPersistClientAuthorizations":true,
    "trustedClientEnabled":true,
    "dynamicRegistrationScopesParamEnabled":true,
    "dynamicRegistrationCustomObjectClass":"oxAuthClientCustomAttributes",
    "authenticationFiltersEnabled":true,
    "clientAuthenticationFiltersEnabled":true,
    "authenticationFilters":[
        {
            "filter":"(&(mail=*{0}*)(inum={1}))",
            "bind":false,
            "bindPasswordAttribute":null,
            "baseDn":"o=gluu"
        },
        {
            "filter":"uid={0}",
            "bind":true,
            "bindPasswordAttribute":"pwd",
            "baseDn":"o=gluu"
        }
    ],
    "clientAuthenticationFilters":[
        {
            "filter":"myCustomAttr1={0}",
            "bind":false,
            "bindPasswordAttribute":"oxAuthClientSecret",
            "baseDn":"ou=clients,o=${config.oxauth.organization},o=gluu"
        }
    ],
    "applianceInum":"${config.oxauth.appliance}",
    "sessionIdUnusedLifetime":86400,
    "sessionIdUnauthenticatedUnusedLifetime":60,
    "sessionIdEnabled":true,
    "sessionIdPersistOnPromptNone":true,
    "sessionIdLifetime":86400,
    "configurationUpdateInterval":3600,
    "cssLocation":"${config.oxauth.contextPath}/stylesheet",
    "jsLocation":"${config.oxauth.contextPath}/js",
    "imgLocation":"${config.oxauth.contextPath}/img",
    "metricReporterInterval":300,
    "metricReporterKeepDataDays":15,
    "pairwiseIdType":"${config.oxauth.pairwiseIdType}",
    "pairwiseCalculationKey":"${config.oxauth.pairwiseCalculationKey}",
    "pairwiseCalculationSalt": "${config.oxauth.pairwiseCalculationSalt}",
    "webKeysStorage": "keystore",
    "dnName": "CN=oxAuth CA Certificates",
    "keyStoreFile": "./conf/keystore.jks",
    "keyStoreSecret": "secret",
    "endSessionWithAccessToken":false,
    "clientWhiteList": ["*"],
    "clientBlackList": ["*.attacker.com/*"],
    "legacyIdTokenClaims": false,
    "customHeadersWithAuthorizationResponse": true,
    "updateUserLastLogonTime": true,
    "updateClientAccessTime":true,
    "corsConfigurationFilters": [
        {
            "filterName": "CorsFilter",
            "corsAllowedOrigins": "*",
            "corsAllowedMethods": "GET,POST,HEAD,OPTIONS",
            "corsAllowedHeaders": "Origin,Authorization,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers",
            "corsExposedHeaders": "",
            "corsSupportCredentials": true,
            "corsLoggingEnabled": false,
            "corsPreflightMaxAge": 1800,
            "corsRequestDecorate": true
        }
    ]
}